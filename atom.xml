<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zedzou的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/child/"/>
  <updated>2020-07-19T22:45:18.658Z</updated>
  <id>http://yoursite.com/child/</id>
  
  <author>
    <name>Zedzou</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SegMap的编译</title>
    <link href="http://yoursite.com/child/2020/07/20/SegMap1/"/>
    <id>http://yoursite.com/child/2020/07/20/SegMap1/</id>
    <published>2020-07-19T22:27:30.000Z</published>
    <updated>2020-07-19T22:45:18.658Z</updated>
    
    <content type="html"><![CDATA[<p>基于增量的语义分割点云定位的开源代码的编译，整个代码较为复杂，基于ROS的，大致分为:手动编译Tensorflow1.8, 编译SegMap两个部分 </p><a id="more"></a><h1 id="安装bazel"><a href="#安装bazel" class="headerlink" title="安装bazel"></a>安装bazel</h1><p>未避免bazel版本带来的编译问题，此处用16.1，下载安装文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">百度网盘链接：https:&#x2F;&#x2F;pan.baidu.com&#x2F;s&#x2F;1os-5hEnu48AhCSernzYFsw</span><br><span class="line">提取码：2ggh</span><br></pre></td></tr></table></figure> <p>下载后使用命令进行安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install pkg-config zip g++ zlib1g-dev unzip python</span><br><span class="line">$ chmod +x bazel-0.16.1-installer-linux-x86_64.sh</span><br><span class="line">$ .&#x2F;bazel-0.16.1-installer-linux-x86_64.sh --user</span><br><span class="line">$ gedit ~&#x2F;.bashrc</span><br><span class="line">$ export PATH&#x3D;&quot;$PATH:$HOME&#x2F;bin&quot;</span><br></pre></td></tr></table></figure> <h1 id="编译tensorflow"><a href="#编译tensorflow" class="headerlink" title="编译tensorflow"></a>编译tensorflow</h1><p>根据SegMap作者的注明，用tensorflow1.8版本，为避免问题，此处即用此版本的tensorflow，下载安装文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">百度网盘链接： https:&#x2F;&#x2F;pan.baidu.com&#x2F;s&#x2F;1qN01zwoPeebhbI900HYoyQ</span><br><span class="line">提取码： 2jm6</span><br></pre></td></tr></table></figure> <p>下载完成后，在解压出来的文件中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install python-numpy python-dev python-pip python-wheel python-virtualenv</span><br><span class="line">$ virtualenv ~&#x2F;segmappyenv #创建虚拟环境</span><br><span class="line">$(segmappyenv) source ~&#x2F;segmappyenv&#x2F;bin&#x2F;activate #激活虚拟环境</span><br><span class="line">$(segmappyenv) pip install --upgrade pip</span><br><span class="line">$(segmappyenv) sudo pip install six numpy wheel mock</span><br><span class="line">$(segmappyenv) pip install catkin_pkg empy pyyaml</span><br><span class="line">$(segmappyenv) .&#x2F;configure</span><br><span class="line">$(segmappyenv) bazel build --config&#x3D;opt --config&#x3D;cuda &#x2F;&#x2F;tensorflow&#x2F;tools&#x2F;pip_package:build_pip_package</span><br><span class="line">$(segmappyenv) bazel-bin&#x2F;tensorflow&#x2F;tools&#x2F;pip_package&#x2F;build_pip_package &#x2F;tmp&#x2F;tensorflow_pkg</span><br><span class="line">$(segmappyenv) sudo pip install &#x2F;tmp&#x2F;tensorflow_pkg&#x2F;tensorflow-1.8.0-py2-none-any.whl</span><br></pre></td></tr></table></figure> <p>bazel build的便宜时间较长</p><h1 id="编译SegMap"><a href="#编译SegMap" class="headerlink" title="编译SegMap"></a>编译SegMap</h1><p>保持在segmappyenv状态中：命令行前面有(segmappyenv)符号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$(segmappyenv) sudo apt-get install python-wstool doxygen dh-autoreconf</span><br><span class="line">$(segmappyenv) mkdir -p ~&#x2F;segmap_ws&#x2F;src</span><br><span class="line">$(segmappyenv) cd ~&#x2F;segmap_ws</span><br><span class="line">$(segmappyenv) catkin init</span><br><span class="line">$(segmappyenv) catkin config --merge-devel</span><br><span class="line">$(segmappyenv) catkin config --cmake-args -DCMAKE_BUILD_TYPE&#x3D;Release</span><br><span class="line">$(segmappyenv) cd src</span><br><span class="line">$(segmappyenv) git clone https:&#x2F;&#x2F;github.com&#x2F;ethz-asl&#x2F;segmap.git</span><br><span class="line">$(segmappyenv) wstool init</span><br><span class="line">$(segmappyenv) wstool merge segmap&#x2F;dependencies.rosinstall</span><br><span class="line">$(segmappyenv) wstool update</span><br><span class="line">$(segmappyenv) cd ~&#x2F;segmap_ws</span><br><span class="line">$(segmappyenv) catkin build tensorflow_ros_cpp --cmake-args -DFORCE_TF_PIP_SEARCH&#x3D;&quot;ON&quot;</span><br><span class="line">$(segmappyenv) cd ~&#x2F;segmap_ws</span><br></pre></td></tr></table></figure> ]]></content>
    
    <summary type="html">
    
      &lt;p&gt;基于增量的语义分割点云定位的开源代码的编译，整个代码较为复杂，基于ROS的，大致分为:手动编译Tensorflow1.8, 编译SegMap两个部分 &lt;/p&gt;
    
    </summary>
    
    
      <category term="SegMap" scheme="http://yoursite.com/child/categories/SegMap/"/>
    
    
      <category term="SegMap" scheme="http://yoursite.com/child/tags/SegMap/"/>
    
  </entry>
  
  <entry>
    <title>ROS学习&lt;三&gt;订阅者Subscriber的编程实现</title>
    <link href="http://yoursite.com/child/2020/07/20/ros-studying3/"/>
    <id>http://yoursite.com/child/2020/07/20/ros-studying3/</id>
    <published>2020-07-19T22:07:44.000Z</published>
    <updated>2020-07-19T22:25:21.203Z</updated>
    
    <content type="html"><![CDATA[<p>订阅者Subscriber的编程实现</p><a id="more"></a><h1 id="订阅者的实现及代码"><a href="#订阅者的实现及代码" class="headerlink" title="订阅者的实现及代码"></a>订阅者的实现及代码</h1><p>1、初始化ROS节点<br>2、订阅需要的话题<br>3、循环等待话题消息，接收到消息后进入回调函数<br>4、在回调函数中处理消息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; pose_sublisher.cpp</span><br><span class="line">&#x2F;&#x2F; 该例程将订阅&#x2F;turtle1&#x2F;pose话题，消息类型turtlesim::Pose</span><br><span class="line"></span><br><span class="line">#include &lt;ros&#x2F;ros.h&gt;</span><br><span class="line">#include &quot;turtlesim&#x2F;Pose.h&quot;</span><br><span class="line">&#x2F;&#x2F; 接收到订阅的消息后，会进入消息回调函数</span><br><span class="line">void poseCallback(const turtlesim::Pose::ConstPtr&amp; msg)</span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F; 将接收到的消息打印出来</span><br><span class="line">    ROS_INFO(&quot;Turtle pose: x:%0.6f, y:%0.6f&quot;, msg-&gt;x, msg-&gt;y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main(int argc, char **argv)</span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F; 初始化ROS节点</span><br><span class="line">    ros::init(argc, argv, &quot;pose_subscriber&quot;);</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 创建节点句柄</span><br><span class="line">    ros::NodeHandle n;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 创建一个Subscriber，订阅名为&#x2F;turtle1&#x2F;pose的topic，注册回调函数poseCallback</span><br><span class="line">    ros::Subscriber pose_sub &#x3D; n.subscribe(&quot;&#x2F;turtle1&#x2F;pose&quot;, 10, poseCallback);</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 循环等待回调函数</span><br><span class="line">    ros::spin();</span><br><span class="line"></span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> <h1 id="配置订阅者的编译规则"><a href="#配置订阅者的编译规则" class="headerlink" title="配置订阅者的编译规则"></a>配置订阅者的编译规则</h1><p>配置CMakeList.txt的编译规则</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">add_executable(pose_sublisher src&#x2F;pose_sublisher.cpp) #设置可执行文件编译的代码</span><br><span class="line">target_link_libraries(pose_sublisher $&#123;catkin_LIBRARIES&#125;) #设置链接库</span><br></pre></td></tr></table></figure> <h1 id="编译并运行订阅者"><a href="#编译并运行订阅者" class="headerlink" title="编译并运行订阅者"></a>编译并运行订阅者</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~&#x2F;catkin_ws</span><br><span class="line">$ catkin_make</span><br><span class="line">$ source devel&#x2F;setup.bash</span><br><span class="line">$ roscore</span><br><span class="line">$ rosrun turtlesim turtlesim_node</span><br><span class="line">$ rosrun learning_topic pose_sublisher</span><br></pre></td></tr></table></figure> <p><img src="/images/ROS/ros_studying/6.png" alt><br><img src="/images/ROS/ros_studying/7.png" alt></p><h1 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;订阅者Subscriber的编程实现&lt;/p&gt;
    
    </summary>
    
    
      <category term="ROS" scheme="http://yoursite.com/child/categories/ROS/"/>
    
    
      <category term="ROS" scheme="http://yoursite.com/child/tags/ROS/"/>
    
  </entry>
  
  <entry>
    <title>ROS学习&lt;二&gt; 发布者publisher的编程实现</title>
    <link href="http://yoursite.com/child/2020/07/20/ros-studying2/"/>
    <id>http://yoursite.com/child/2020/07/20/ros-studying2/</id>
    <published>2020-07-19T19:37:25.000Z</published>
    <updated>2020-07-19T22:24:12.954Z</updated>
    
    <content type="html"><![CDATA[<p>ROS的发布者pulisher的编程&lt;&lt;&gt;</p><a id="more"></a><h1 id="创建功能包"><a href="#创建功能包" class="headerlink" title="创建功能包"></a>创建功能包</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$  ~&#x2F;catkin_ws</span><br><span class="line">$ catkin_create_pkg learning_topic roscpp rospy std_msgs geometry_msgs turtlesim</span><br></pre></td></tr></table></figure> <h1 id="创建发布者代码-C"><a href="#创建发布者代码-C" class="headerlink" title="创建发布者代码(C++)"></a>创建发布者代码(C++)</h1><p>代码主要发布海龟的运动轨迹，创建发布者代码主要分为几下几步：<br>1、初始化ROS节点<br>2、向ROS master 注册节点信息，包括发布的话题名和话题中的消息类型<br>3、创建消息数据<br>4、按照一定频率循环发布消息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; velocity_publisher.cpp</span><br><span class="line">&#x2F;&#x2F; 该例程将发布turtle1&#x2F;cmd_vel话题，消息类型geometry_msgs::Twist</span><br><span class="line"></span><br><span class="line">#include &lt;ros&#x2F;ros.h&gt;</span><br><span class="line">#include &lt;geometry_msgs&#x2F;Twist.h&gt;</span><br><span class="line"></span><br><span class="line">int main(int argc, char **argv)</span><br><span class="line">&#123;</span><br><span class="line">&#x2F;&#x2F; ROS节点初始化</span><br><span class="line">ros::init(argc, argv, &quot;velocity_publisher&quot;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 创建节点句柄</span><br><span class="line">ros::NodeHandle n;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 创建一个Publisher，发布名为&#x2F;turtle1&#x2F;cmd_vel的topic，消息类型为geometry_msgs::Twist，队列长度10</span><br><span class="line">ros::Publisher turtle_vel_pub &#x3D; n.advertise&lt;geometry_msgs::Twist&gt;(&quot;&#x2F;turtle1&#x2F;cmd_vel&quot;, 10);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 设置循环的频率</span><br><span class="line">ros::Rate loop_rate(10);</span><br><span class="line"></span><br><span class="line">int count &#x3D; 0;</span><br><span class="line">while (ros::ok())</span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F; 初始化geometry_msgs::Twist类型的消息</span><br><span class="line">geometry_msgs::Twist vel_msg;</span><br><span class="line">vel_msg.linear.x &#x3D; 0.5;</span><br><span class="line">vel_msg.angular.z &#x3D; 0.2;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 发布消息</span><br><span class="line">turtle_vel_pub.publish(vel_msg);</span><br><span class="line">ROS_INFO(&quot;Publsh turtle velocity command[%0.2f m&#x2F;s, %0.2f rad&#x2F;s]&quot;, </span><br><span class="line">vel_msg.linear.x, vel_msg.angular.z);</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 按照循环频率延时</span><br><span class="line">    loop_rate.sleep();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> <h1 id="配置发布者的编译规则"><a href="#配置发布者的编译规则" class="headerlink" title="配置发布者的编译规则"></a>配置发布者的编译规则</h1><p>配置CMakeList的编译规则<br>1、设置需要编译的代码和生成的可执行文件<br>2、设置链接库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">add_executable(velocity_publisher src&#x2F;velocity_publisher.cpp) #设置可执行文件编译的代码</span><br><span class="line">target_link_libraries(velocity_publisher $&#123;catkin_LIBRARIES&#125;) #设置链接库</span><br></pre></td></tr></table></figure> <p><img src="/images/ROS/ros_studying/3.png" alt="设置编译规则"></p><h1 id="编译并运行发布者"><a href="#编译并运行发布者" class="headerlink" title="编译并运行发布者"></a>编译并运行发布者</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~&#x2F;catkin_ws</span><br><span class="line">$ catkin_make</span><br><span class="line">$ source devel&#x2F;setup.bash</span><br><span class="line">$ roscore</span><br><span class="line">$ rosrun turtlesim turtlesim_node</span><br><span class="line">$ rosrun learning_topic velocity_publisher</span><br></pre></td></tr></table></figure><p><img src="/images/ROS/ros_studying/4.png" alt><br><img src="/images/ROS/ros_studying/5.png" alt></p><h1 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ROS的发布者pulisher的编程&amp;lt;&amp;lt;&amp;gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="ROS" scheme="http://yoursite.com/child/categories/ROS/"/>
    
    
      <category term="ROS" scheme="http://yoursite.com/child/tags/ROS/"/>
    
  </entry>
  
  <entry>
    <title>ROS学习&lt;一&gt; 创建工作空间和功能包</title>
    <link href="http://yoursite.com/child/2020/07/20/ROS-Studying/"/>
    <id>http://yoursite.com/child/2020/07/20/ROS-Studying/</id>
    <published>2020-07-19T19:05:17.000Z</published>
    <updated>2020-07-19T22:20:07.419Z</updated>
    
    <content type="html"><![CDATA[<p>创建工作空间和功能包</p><a id="more"></a><h1 id="1、工作空间"><a href="#1、工作空间" class="headerlink" title="1、工作空间"></a>1、工作空间</h1><p>ROS的项目管理都是以工作空间进行管理的（工作空间，一个文件夹），工作空间是一个存放工程开发相关文件的文件夹。工作空间主要有一下4个文件夹。<br>1、src：代码空间（Source Space）<br>2、build: 编译空间（Build Space）<br>3、devel: 开发空间（Development Space）<br>4、install： 安装空间（Install Space）<br><img src="/images/ROS/ros_studying/1.png" alt="catkin编译系统下的工作空间结构"></p><h1 id="2、创建工作空间"><a href="#2、创建工作空间" class="headerlink" title="2、创建工作空间"></a>2、创建工作空间</h1><p>1、创建工作空间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir -p ~&#x2F;catkin_ws&#x2F;src #创建名字为catkin_ws的工作空间</span><br><span class="line">$ cd ~&#x2F;catkin_ws&#x2F;src     </span><br><span class="line">$ catkin_init_workspace #初始化工作空间</span><br></pre></td></tr></table></figure> <p>2、编译工作空间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~&#x2F;catkin_ws&#x2F;</span><br><span class="line">$ catkin_make</span><br></pre></td></tr></table></figure> <p>3、设置环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ source devel&#x2F;setup.bash</span><br></pre></td></tr></table></figure> <p>4、检查环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ echo ￥ROS_PACKAGE_PATH</span><br></pre></td></tr></table></figure> <p><img src="/images/ROS/ros_studying/2.png" alt="检查环境变量"></p><h1 id="3、创建功能包"><a href="#3、创建功能包" class="headerlink" title="3、创建功能包"></a>3、创建功能包</h1><p>1、创建功能包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~&#x2F;catkin_ws&#x2F;src</span><br><span class="line">$ catkin_create_pkg test_pkg std_msgs rospy roscpp #test_pkg为创建的功能包的名字 test_pkg后面为需要依赖的项</span><br></pre></td></tr></table></figure> <p>2、编译功能包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~catkin_ws</span><br><span class="line">$ catkin_make </span><br><span class="line">$ source ~&#x2F;catkin_ws&#x2F;devel&#x2F;setup.bash</span><br></pre></td></tr></table></figure><h1 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;创建工作空间和功能包&lt;/p&gt;
    
    </summary>
    
    
      <category term="ROS" scheme="http://yoursite.com/child/categories/ROS/"/>
    
    
      <category term="ROS" scheme="http://yoursite.com/child/tags/ROS/"/>
    
  </entry>
  
  <entry>
    <title>ContextCapture(smart3D)</title>
    <link href="http://yoursite.com/child/2020/05/18/ContextCapture-smart3D%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E7%A0%B4%E8%A7%A3/"/>
    <id>http://yoursite.com/child/2020/05/18/ContextCapture-smart3D%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E7%A0%B4%E8%A7%A3/</id>
    <published>2020-05-18T01:42:21.000Z</published>
    <updated>2020-05-18T01:42:22.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>C/C++连接MySQL数据库并进行常见操作</title>
    <link href="http://yoursite.com/child/2020/02/28/C-C-%E8%BF%9E%E6%8E%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B9%B6%E8%BF%9B%E8%A1%8C%E5%B8%B8%E8%A7%81%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/child/2020/02/28/C-C-%E8%BF%9E%E6%8E%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B9%B6%E8%BF%9B%E8%A1%8C%E5%B8%B8%E8%A7%81%E6%93%8D%E4%BD%9C/</id>
    <published>2020-02-28T10:06:59.000Z</published>
    <updated>2020-02-28T11:53:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>主要记录如何通过C/C++连接MySQL数据库，并进行常见的MySQL数据库操作,最后实现了简单的学生（或职工）信息管理系统。<br>SQL从删库到跑路！！！！ （口号一定要响）</p><a id="more"></a><h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><h2 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h2><p>1、下载并安装<br>首先安装<a href="https://downloads.mysql.com/archives/community/" target="_blank" rel="noopener" title="点击下载MySQL installer">MySQL Server</a><br>将MySQL installer安装好后，打开(我这个已经安装好了好几个)。<br><img src="/images/MySQL/MySQL1.jpg" alt="MySQL"><br>点击右上角的add,中间就是我们能安装的所有东西。<br>！<a href="/images/MySQL/MySQL2.jpg">MySQL2</a><br>展开MySQL servers,选中一个合适的版本，并点击中间栏的右向键，将需要安装的内容推送到右侧（安装路径建议默认），<br><img src="/images/MySQL/MySQL3.jpg" alt="MySQL3"><br>随后点击next,并按照提示设置服务器数据库管理系统的用户名和密码，用户名和密码必须记牢固。</p><p>2、测试是否安装成功<br>打开cmd终端，切换到MySQL的安装目录或者在开始菜单打开 MySQL Commend Line Client, 输入前面安装时设置的服务器数据库管理系统密码（cmd终端貌似不需要输入密码）。<br><img src="/images/MySQL/MySQL4.jpg" alt="MySQL4"><br>点击Enter后出现以下内容即代表安装成功<br><img src="/images/MySQL/MySQL5.jpg" alt="MySQL5"></p><h2 id="配置C-C连接MySQL数据库的环境"><a href="#配置C-C连接MySQL数据库的环境" class="headerlink" title="配置C++/C连接MySQL数据库的环境"></a>配置C++/C连接MySQL数据库的环境</h2><p>（1）添加包含目录：【安装位置\MySQL Server 5.6\include】<br><br>（2）添加库目录：【安装位置\MySQL Server 5.6\lib】<br><br>（3）让IDE包含必要的链接库文件：【安装位置\MySQL Server 5.6\lib\libmysql.lib】(vs中一般为‘链接器’-‘输入’-‘附加依赖项’:添加libmysql.lib)</p><h1 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">char SqlText[256] &#x3D; &quot;&quot;;  &#x2F;&#x2F;将用来保存要执行的SQL语句</span><br><span class="line">MYSQL *conn &#x3D; NULL;      &#x2F;&#x2F;MYSQL句柄类型(任何一个mysql操作都是基于MYSQL这个句柄来操作的)</span><br><span class="line">MYSQL_RES *res &#x3D; NULL;   &#x2F;&#x2F;数据查询结果集</span><br><span class="line">MYSQL_FIELD * fd &#x3D; NULL; &#x2F;&#x2F;MySQL表头域类型</span><br><span class="line">MYSQL_ROW row;           &#x2F;&#x2F;一个行数据的类型安全(type-safe)的表示</span><br><span class="line">conn &#x3D; mysql_init(NULL); &#x2F;&#x2F;初始化MYSQL连接</span><br><span class="line">char  server[20] &#x3D; &quot;localhost&quot;; &#x2F;&#x2F;mysql服务器的IP</span><br><span class="line">char  user[20] &#x3D; &quot;root&quot;;        &#x2F;&#x2F;用户名</span><br><span class="line">char  psd[20] &#x3D; &quot;199601151239Zedzou&quot;;       &#x2F;&#x2F;&#x2F;密码  需要改为自己的密码</span><br><span class="line">char  dbName[1024] &#x3D; &quot;myemployees&quot;;    &#x2F;&#x2F;&#x2F;数据库名 需要改为自己的数据库名</span><br><span class="line">unsigned short port &#x3D; 3306;     &#x2F;&#x2F;服务器端口号,默认3306</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;&#x2F;建立mysql连接</span><br><span class="line">if (mysql_real_connect(conn, server, user, psd, dbName, port, NULL, 0) &#x3D;&#x3D; 0) </span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;Error connecting to database: %s\n&quot;, mysql_error(conn));</span><br><span class="line">&#125;</span><br><span class="line">else </span><br><span class="line">&#123;</span><br><span class="line">puts(&quot;数据库连接成功！&quot;);</span><br><span class="line">mysql_query(conn, &quot;set names &#39;GBK&#39;&quot;); &#x2F;&#x2F;设置字符集,防止中文无法正常显示[可选操作]</span><br><span class="line">&#x2F;&#x2F;&#x2F;下面开始对数据库进行操作</span><br><span class="line">const char tableName[30] &#x3D; &quot;employees&quot;;&#x2F;&#x2F;要操作的表名</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;查找</span><br><span class="line">sprintf(SqlText, &quot;select * from %s &quot;, tableName);</span><br><span class="line">if (mysql_query(conn, SqlText) &#x3D;&#x3D; 0)     &#x2F;&#x2F;执行成功则把结果输出</span><br><span class="line">&#123;      </span><br><span class="line">res &#x3D; mysql_store_result(conn);        &#x2F;&#x2F;存储查询得到的结果集</span><br><span class="line">printf(&quot;&gt;&gt;&gt;执行: %s\nrecords nums:&quot;, SqlText);</span><br><span class="line">printf(&quot;%u\n\n&quot;, mysql_num_rows(res)); &#x2F;&#x2F;获取搜索到的结果集的条数</span><br><span class="line">&#x2F;&#x2F;输出数据结果各字段名,即表头被选取的部分</span><br><span class="line">while ((fd &#x3D; mysql_fetch_field(res)) !&#x3D; NULL) </span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;%-10s &quot;, fd-&gt;name);</span><br><span class="line">&#125;</span><br><span class="line">puts(&quot;&quot;);</span><br><span class="line">&#x2F;&#x2F;打印获取的数据</span><br><span class="line">int fieldNums &#x3D; mysql_num_fields(res); &#x2F;&#x2F;获取数据结果每条记录的列数</span><br><span class="line">while ((row &#x3D; mysql_fetch_row(res)) !&#x3D; NULL)  &#x2F;&#x2F;不断获取下一组结果</span><br><span class="line">&#123; </span><br><span class="line">for (int i &#x3D; 0; i &lt; fieldNums; i++) </span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;%-10s &quot;, row[i]);</span><br><span class="line">&#125;</span><br><span class="line">puts(&quot;&quot;);</span><br><span class="line">&#125;</span><br><span class="line">mysql_free_result(res); &#x2F;&#x2F;释放结果集资源</span><br><span class="line">&#125;</span><br><span class="line">else </span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;查询失败: %s\n&quot;, mysql_error(conn));</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;修改</span><br><span class="line">sprintf(SqlText, &quot;update %s set passwd&#x3D;&#39;passwd&#39; where id&#x3D;&#39;2&#39;&quot;, tableName);</span><br><span class="line">printf(&quot;&gt;&gt;&gt;执行: %s\n&quot;, SqlText); </span><br><span class="line">if (mysql_query(conn, SqlText) !&#x3D; 0)   &#x2F;&#x2F;执行sql语句</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;Can&#39;t update data on table: &quot;);</span><br><span class="line">printf(&quot;%s\n&quot;, mysql_error(conn)); &#x2F;&#x2F;获取最后一次查询失败的错误提示</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">mysql_close(conn); &#x2F;&#x2F;关闭连接，即释放连接</span><br><span class="line">getchar();</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="常见的函数"><a href="#常见的函数" class="headerlink" title="常见的函数"></a>常见的函数</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">从结果集中取得一行作为关联数组，或数字数组，或二者兼有.</span><br><span class="line">mysql_fetch_array() </span><br><span class="line"></span><br><span class="line">从结果集中取得一行作为枚举数组.</span><br><span class="line">mysql_fetch_row() </span><br><span class="line"></span><br><span class="line">取得结果集中每个输出的长度,执行失败返回false,返回数组的第一个下标是0.</span><br><span class="line">mysql_fetch_lengths() </span><br><span class="line"></span><br><span class="line">可以移动内部返回指针,成功返回true,失败返回false.</span><br><span class="line">mysql_data_seek() </span><br><span class="line"></span><br><span class="line">取得结果中指定字段的字段名.</span><br><span class="line">mysql_field_name() </span><br><span class="line"></span><br><span class="line">取得指定字段所在的数据表名.</span><br><span class="line">mysql_field_table() </span><br><span class="line"></span><br><span class="line">返回指定字段的长度.</span><br><span class="line">mysql_field_len() </span><br><span class="line"></span><br><span class="line">取得返回字段的数目.</span><br><span class="line">mysql_num_fields() </span><br><span class="line"></span><br><span class="line">取得返回行的数目.</span><br><span class="line">mysql_num_rows() </span><br><span class="line"></span><br><span class="line">列出指定数据库的数据表.</span><br><span class="line">mysql_list_tables() </span><br><span class="line"></span><br><span class="line">取得数据表名称.</span><br><span class="line">mysql_tablename() </span><br><span class="line"></span><br><span class="line">取得前一次 MySQL 操作所影响的记录行数.</span><br><span class="line">mysql_affected_rows() </span><br><span class="line"></span><br><span class="line">返回错误信息代码.</span><br><span class="line">mysql_errno() </span><br></pre></td></tr></table></figure><h1 id="数据库常见的字符类型"><a href="#数据库常见的字符类型" class="headerlink" title="数据库常见的字符类型"></a>数据库常见的字符类型</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">char :固定长度类型.</span><br><span class="line">varchar :可变长度类型,长度+1.</span><br><span class="line">数据库日期时间类型:</span><br><span class="line">date :日期类型.</span><br><span class="line">time :时间类型.</span><br><span class="line">datetime :日期时间类型.&lt;Y-m-d H:m:s&gt;</span><br><span class="line">数据库数字类型:</span><br><span class="line">TINYINT :1字节 255</span><br><span class="line">SMALLINT :2字节 65535</span><br><span class="line">MEDIUMINT :3字节 16777215</span><br><span class="line">INT :4字节 4294967295</span><br><span class="line">BIGINT :8字节 18446744073709551615</span><br><span class="line">session_unregister(要删除的变量名,如$_SESSION[&quot;...&quot;])可以删除某个会话变量,unset()函数在此处与此函数作用等同.</span><br><span class="line">session_destroy(无) 结束目前的session,本函数没有参数,且返回值为true.</span><br><span class="line">session_start(无) 初始化一个会话或是继续目前的会话.</span><br><span class="line">session_decode(要解码的资料) 解密一个使用session_encode()加密的当前会话内容.</span><br><span class="line">require(),require_once(),include(),include_once() 调用外部文件的函数.</span><br><span class="line">header(&quot;location:要转到的地址&quot;) 跳转连接.</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;主要记录如何通过C/C++连接MySQL数据库，并进行常见的MySQL数据库操作,最后实现了简单的学生（或职工）信息管理系统。&lt;br&gt;SQL从删库到跑路！！！！ （口号一定要响）&lt;/p&gt;
    
    </summary>
    
    
      <category term="MySQL" scheme="http://yoursite.com/child/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="http://yoursite.com/child/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>反正没人看，我就瞎写点生活</title>
    <link href="http://yoursite.com/child/2020/02/28/%E5%8F%8D%E6%AD%A3%E6%B2%A1%E4%BA%BA%E7%9C%8B%EF%BC%8C%E6%88%91%E5%B0%B1%E7%9E%8E%E5%86%99%E7%82%B9%E7%94%9F%E6%B4%BB/"/>
    <id>http://yoursite.com/child/2020/02/28/%E5%8F%8D%E6%AD%A3%E6%B2%A1%E4%BA%BA%E7%9C%8B%EF%BC%8C%E6%88%91%E5%B0%B1%E7%9E%8E%E5%86%99%E7%82%B9%E7%94%9F%E6%B4%BB/</id>
    <published>2020-02-28T06:07:35.000Z</published>
    <updated>2020-02-28T06:27:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>随笔，其实就是瞎写。</p><a id="more"></a><h1 id="2020-2-28"><a href="#2020-2-28" class="headerlink" title="2020.2.28"></a>2020.2.28</h1><p>先记录下2020疫情之下，两个月没剪头的我。<br><img src="/images/suibi/pic1.jpg" alt="没剪头"><br>哈哈哈，说实话，我一直没戴口罩，今天所里说要把戴口罩的自拍发过去，作为人脸识别测温的数据，我才戴了一个拍了张巨丑的照片。<br>最近烦心事太多，脸都没洗，啊<del>~</del></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;随笔，其实就是瞎写。&lt;/p&gt;
    
    </summary>
    
    
      <category term="瞎写" scheme="http://yoursite.com/child/categories/%E7%9E%8E%E5%86%99/"/>
    
    
      <category term="随笔（其实就是瞎写）" scheme="http://yoursite.com/child/tags/%E9%9A%8F%E7%AC%94%EF%BC%88%E5%85%B6%E5%AE%9E%E5%B0%B1%E6%98%AF%E7%9E%8E%E5%86%99%EF%BC%89/"/>
    
  </entry>
  
  <entry>
    <title>hexo相关问题记录</title>
    <link href="http://yoursite.com/child/2020/02/26/hexo%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/child/2020/02/26/hexo%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</id>
    <published>2020-02-26T13:09:18.000Z</published>
    <updated>2020-02-26T13:13:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>hexo笔记。</p><a id="more"></a><h1 id="hexo端口被占用的问题"><a href="#hexo端口被占用的问题" class="headerlink" title="hexo端口被占用的问题"></a>hexo端口被占用的问题</h1><p>1、启动本地服务的时候换端口。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s -p 5000</span><br></pre></td></tr></table></figure> <p>2、如果懒得每次启动输命令，可以在_config.yml文件中加入下列配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: 5000</span><br><span class="line">  compress: true</span><br><span class="line">  header: true</span><br></pre></td></tr></table></figure> ]]></content>
    
    <summary type="html">
    
      &lt;p&gt;hexo笔记。&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://yoursite.com/child/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/child/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>数据结构与算法学习笔记</title>
    <link href="http://yoursite.com/child/2020/02/24/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/child/2020/02/24/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-02-24T14:20:40.000Z</published>
    <updated>2020-02-25T06:47:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>主要记录数据结构与算法的学习笔记。</p><a id="more"></a><h1 id="线性表的相关概念"><a href="#线性表的相关概念" class="headerlink" title="线性表的相关概念"></a>线性表的相关概念</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>线性表: n个同类型数据元素的有限序列,记为：L= (a1，a2，… ，ai ，… ，an)。<br>L为表名；<br>i为数据元素ai 在线性表中的位序；<br>n为线性表的表长; n=0 时称为空表；<br>数据元素之间的关系是：ai-1领先于ai，ai领先于ai+1。称ai-1是ai的直接前驱，ai+1是ai的直接后继，<br>除第一元素a1外，均有唯一的前驱；<br>除最后元素an外，均有唯一的后继；</p><h2 id="线性表的相关操作"><a href="#线性表的相关操作" class="headerlink" title="线性表的相关操作"></a>线性表的相关操作</h2><p>线性表定义为指针类型SqListPtr，数据元素类型为ElemType。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;线性表初始化操作</span><br><span class="line">Status List_Init(SqListPtr L); </span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;线性表销毁</span><br><span class="line">void List_Destory(SqListPtr L); </span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;线性表清楚所有数据</span><br><span class="line">void List_Clear(SqListPtr L); </span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;空的线性表</span><br><span class="line">bool List_Empty(SqListPtr L); </span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;线性表的大小</span><br><span class="line">int List_Size(SqListPtr L); </span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;检索线性表位于pos处的元素，并复制给elem</span><br><span class="line">Status List_Retrival(SqListPtr L, int pos, ElemType *elem); </span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;查询线性表中是否有元素elem</span><br><span class="line">Status List_Locate(SqListPtr L, ElemType elem, int *pos); </span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;给线性表插入某个元素</span><br><span class="line">Status List_Insert(SqListPtr L, int pos, ElemType elem); </span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;删除线性表中某个元素</span><br><span class="line">Status List_delete(SqListPtr L, int pos); </span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;线性表的前驱</span><br><span class="line">Status List_Prior(SqListPtr L, int pos, ElemType * elem); </span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;线性表的后继</span><br><span class="line">Status List_Next(SqListPtr L, int pos, ElemType *elem); </span><br></pre></td></tr></table></figure> <h2 id="示例-合并列表"><a href="#示例-合并列表" class="headerlink" title="示例(合并列表)"></a>示例(合并列表)</h2><p>1、合并线性表</p><p>问题：集合A和B分别用两个线性表LA和LB表示，求A∪B并用线性表LA表示。</p><p>算法设计：<br>–-思想：从LB中逐一取出元素,判该元素是否在LA中,若不在则将该元素插入到LA中。</p><p>细化：到实现程度<br>– 逐一：从第一个到最后一个,计数型循环,前提是需要知道元素个数<br>– 如何取出第i个数据元素bi？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List_Retrieve(Lb, i, &amp;elem) →elem</span><br></pre></td></tr></table></figure> <p>– 如何判断bi是否已在A中？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List_Locate(La,elem,&amp;j) </span><br></pre></td></tr></table></figure> <p>– 如果不在A中，怎样实现将bi插入？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List_Insert(La,1,elem) </span><br></pre></td></tr></table></figure> <p>完整代码示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;选数据元素个数少的作为Lb可优化程序</span><br><span class="line">Status List_Union(SqListPtr La, SqListPtr Lb)</span><br><span class="line">&#123;</span><br><span class="line">ElemType elem;</span><br><span class="line">Status status;</span><br><span class="line">int i, j, len &#x3D; List_Size(Lb);</span><br><span class="line"></span><br><span class="line">for (i &#x3D; 1; i&lt;&#x3D;len; i++)</span><br><span class="line">&#123;</span><br><span class="line">List_Retrieve(Lb, i, &amp;elem); &#x2F;&#x2F;取出Lb中第i个数据元素</span><br><span class="line">status &#x3D; List_Locate(La, elem, &amp;j);</span><br><span class="line">if (status !&#x3D; success)</span><br><span class="line">&#123;</span><br><span class="line">status &#x3D; List_Insert(La, 1, elem);</span><br><span class="line">if (status !&#x3D; success) </span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; &quot;位置为&quot; &lt;&lt; i &lt;&lt; &quot;的元素插入失败 &lt;&lt; endl;</span><br><span class="line">break; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else </span><br><span class="line">&#123;</span><br><span class="line">List_Add(La, j, 1);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return status;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> <p>2、合并两个有序表<br>问题：已知线性表La和Lb中元素分别按非递减顺序排列，现要求将它们合并成一个新的线性表Lc，并使得Lc中元素也按照非递减顺序排列。<br>分析：线性表Lc初始为空。依次扫描La和Lb中的元素，比较当前元素的值，将较小值的元素插入Lc的表尾之后，如此反复，直到一个线性表扫描完毕，然后将未完的那个线性表中余下的元素逐个插入到Lc的表尾之后。</p><p>完整代码示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">Status List_Merge(SqListPtr La, SqListPtr Lb, SqListPtr Lc)</span><br><span class="line">&#123;</span><br><span class="line">ElemType elem1, elem2;</span><br><span class="line">List_Init (Lc);</span><br><span class="line">int i &#x3D; 1, j &#x3D;1, k&#x3D;1;</span><br><span class="line">int n &#x3D; List_Size(La);</span><br><span class="line">int m &#x3D; List_Size(Lb);</span><br><span class="line">while (i &lt;&#x3D; n  &amp;&amp; j &lt;&#x3D; m) &#x2F;&#x2F;两个表均未处理完</span><br><span class="line">&#123;</span><br><span class="line">List_Retrieve(La, i, &amp;elem1);</span><br><span class="line">List_Retrieve(Lb, j, &amp;elem2);</span><br><span class="line">if (elem1 &lt; elem2) &#x2F;&#x2F;在Lc线性列表中插入较小的元素</span><br><span class="line">&#123;</span><br><span class="line">status &#x3D; List_Insert(Lc, k , elem1);</span><br><span class="line">i &#x3D; 1+1;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">status &#x3D; List_Insert(Lc, k, elem2);</span><br><span class="line">j &#x3D; j+1;</span><br><span class="line">&#125;</span><br><span class="line">k &#x3D; k+1; &#x2F;&#x2F;Lc指针往后走</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">while (i &lt;&#x3D; n) &#x2F;&#x2F;表La已经处理完，Lb没有处理完</span><br><span class="line">&#123;</span><br><span class="line">List_Retrieve(La, i, &amp;elem1);</span><br><span class="line">List_Insert(Lc, k, elem1);</span><br><span class="line">i&#x3D; i+1;</span><br><span class="line">k&#x3D; k+1;</span><br><span class="line">&#125;</span><br><span class="line">while (j &lt;&#x3D; m)</span><br><span class="line">&#123;</span><br><span class="line">List_Retrieve(Lb, j, &amp;elem2);</span><br><span class="line">List_Insert(Lc, k, elem2);</span><br><span class="line">j &#x3D; j+1;</span><br><span class="line">k &#x3D; k+1;</span><br><span class="line">&#125;</span><br><span class="line">return status;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> <h1 id="线性表的存储结构及基本操作的实现"><a href="#线性表的存储结构及基本操作的实现" class="headerlink" title="线性表的存储结构及基本操作的实现"></a>线性表的存储结构及基本操作的实现</h1><h2 id="顺序存储结构"><a href="#顺序存储结构" class="headerlink" title="顺序存储结构"></a>顺序存储结构</h2><p>用一组地址连续的存储单元依次存放线性表中的数据元素。</p><p><img src="/images/Data_structure/4.png" alt="线性表的存储"></p><p>优点：可以随机的存储数据</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;主要记录数据结构与算法的学习笔记。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据结构与算法" scheme="http://yoursite.com/child/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数据结构与算法" scheme="http://yoursite.com/child/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>c++服务器开发学习</title>
    <link href="http://yoursite.com/child/2020/02/24/c-%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BC%80%E5%8F%91/"/>
    <id>http://yoursite.com/child/2020/02/24/c-%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BC%80%E5%8F%91/</id>
    <published>2020-02-24T08:37:35.000Z</published>
    <updated>2020-02-24T10:07:28.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><p>who 连接到本地的设备<br>pwd 打印当前目录<br>ls 打印当前目录的所有文件</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; class=&quot;headerlink&quot; title=&quot;常用命令&quot;&gt;&lt;/a&gt;常用命令&lt;/h1&gt;&lt;p&gt;who 连接到本地的设备&lt;br&gt;pwd 打印当前目录&lt;br&gt;ls 打印当前目录的所有文件&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="服务器开发" scheme="http://yoursite.com/child/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="服务器开发 ubuntu" scheme="http://yoursite.com/child/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BC%80%E5%8F%91-ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>SQL从删库到跑路&lt;一&gt;：基础查询</title>
    <link href="http://yoursite.com/child/2020/02/24/MySQL/"/>
    <id>http://yoursite.com/child/2020/02/24/MySQL/</id>
    <published>2020-02-24T07:53:10.000Z</published>
    <updated>2020-02-24T10:12:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>主要记录一下MySQL的学习笔记。课程来自哔哩哔哩的《MySQL 基础+高级篇- 数据库 -sql -尚硅谷》<br>SQL从删库到跑路！！！！</p><a id="more"></a><h1 id="基础查询"><a href="#基础查询" class="headerlink" title="基础查询"></a>基础查询</h1><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><p>select 查询列表 from 表名;</p><p>特点：<br>1、查询列表可以是：表中的字段、常量值、表达式、函数<br>2、查询的结果是一个虚拟的表格</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"> USE myemployees; #当前的操作表格</span><br><span class="line"></span><br><span class="line">#1.查询表中的单个字段</span><br><span class="line"> SELECT last_name FROM employees;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#2.查询表中的多个字段</span><br><span class="line"> SELECT last_name,salary,email FROM employees;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#3.查询表中的所有字段</span><br><span class="line">#方式一：</span><br><span class="line"> SELECT </span><br><span class="line">&#96;employee_id&#96;,</span><br><span class="line">&#96;first_name&#96;,</span><br><span class="line">&#96;last_name&#96;,</span><br><span class="line">&#96;phone_number&#96;,</span><br><span class="line">&#96;last_name&#96;,</span><br><span class="line">&#96;job_id&#96;,</span><br><span class="line">&#96;phone_number&#96;,</span><br><span class="line">&#96;job_id&#96;,</span><br><span class="line">&#96;salary&#96;,</span><br><span class="line">&#96;commission_pct&#96;,</span><br><span class="line">&#96;manager_id&#96;,</span><br><span class="line">&#96;department_id&#96;,</span><br><span class="line">&#96;hiredate&#96; </span><br><span class="line"> FROM</span><br><span class="line">employees ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#方式二：  </span><br><span class="line"> SELECT * FROM employees;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#4.查询常量值</span><br><span class="line"> SELECT 100;</span><br><span class="line"> SELECT &#39;john&#39;;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">#5.查询表达式</span><br><span class="line"> SELECT 100%98;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">#6.查询函数</span><br><span class="line"> SELECT VERSION();</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">#7.起别名</span><br><span class="line"> &#x2F;*</span><br><span class="line"> ①便于理解</span><br><span class="line"> ②如果要查询的字段有重名的情况，使用别名可以区分开来</span><br><span class="line">*&#x2F;</span><br><span class="line"> #方式一：使用as</span><br><span class="line">SELECT 100%98 AS 结果;</span><br><span class="line">SELECT last_name AS 姓,first_name AS 名 FROM employees;</span><br><span class="line"></span><br><span class="line">#方式二：使用空格</span><br><span class="line">SELECT last_name 姓,first_name 名 FROM employees;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#案例：查询salary，显示结果为 out put</span><br><span class="line">SELECT salary AS &quot;out put&quot; FROM employees;</span><br><span class="line"></span><br><span class="line">#8.去重</span><br><span class="line"></span><br><span class="line">#案例：查询员工表中涉及到的所有的部门编号</span><br><span class="line">SELECT DISTINCT department_id FROM employees;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#9.+号的作用</span><br><span class="line"></span><br><span class="line">#案例：查询员工名和姓连接成一个字段，并显示为 姓名</span><br><span class="line"></span><br><span class="line">SELECT CONCAT(&#39;a&#39;,&#39;b&#39;,&#39;c&#39;) AS 结果; #用CONCAT将a, b, c 连接起来</span><br><span class="line"></span><br><span class="line">SELECT </span><br><span class="line">CONCAT(last_name,first_name) AS 姓名 #用CONCAT将姓名连接起来</span><br><span class="line">FROM</span><br><span class="line">employees;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;主要记录一下MySQL的学习笔记。课程来自哔哩哔哩的《MySQL 基础+高级篇- 数据库 -sql -尚硅谷》&lt;br&gt;SQL从删库到跑路！！！！&lt;/p&gt;
    
    </summary>
    
    
      <category term="MySQL" scheme="http://yoursite.com/child/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="http://yoursite.com/child/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>vcpkg主要问题及解决方法</title>
    <link href="http://yoursite.com/child/2020/02/12/vcpkg%E4%B8%BB%E8%A6%81%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/child/2020/02/12/vcpkg%E4%B8%BB%E8%A6%81%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</id>
    <published>2020-02-12T09:12:59.000Z</published>
    <updated>2020-02-12T09:33:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要记录vcpkg使用过程的一些问题及解决办法。</p><a id="more"></a><h1 id="vcpkg安装过程下载"><a href="#vcpkg安装过程下载" class="headerlink" title="vcpkg安装过程下载"></a>vcpkg安装过程下载</h1><p>vcpkg在安装包的时候常出现下载太慢的情况，主要解决方法如下：<br>1、在vcpkg的安装终端复制下载链接，在浏览器或迅雷中进行下载；</p><p><img src="/images/vcpkg1.png" alt="复制下载链接"><br><img src="/images/vcpkg2.png" alt="浏览器中下载"></p><p>2、将下载的文件剪贴到 ./vcpkg/downloads/  中；</p><p><img src="/images/vcpkg3.png" alt="粘贴到downloads文件夹内"></p><p>3、打开./vcpkg/downloads/temp文件夹，该文件夹存储着正在下载的临时文件，看看正在下载的文件的命名，将文件的名字复制，粘贴到并将刚刚复制到downloads的文件的名字。</p><p>4、重启终端，重新输入安装命令即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要记录vcpkg使用过程的一些问题及解决办法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="vcpkg" scheme="http://yoursite.com/child/categories/vcpkg/"/>
    
    
      <category term="vcpkg" scheme="http://yoursite.com/child/tags/vcpkg/"/>
    
  </entry>
  
  <entry>
    <title>ROS获取Airsim的雷达数据和图像数据</title>
    <link href="http://yoursite.com/child/2020/02/11/ROS-%E8%8E%B7%E5%8F%96Airsim%E7%9A%84%E9%9B%B7%E8%BE%BE%E6%95%B0%E6%8D%AE%E5%92%8C%E5%9B%BE%E5%83%8F%E6%95%B0%E6%8D%AE/"/>
    <id>http://yoursite.com/child/2020/02/11/ROS-%E8%8E%B7%E5%8F%96Airsim%E7%9A%84%E9%9B%B7%E8%BE%BE%E6%95%B0%E6%8D%AE%E5%92%8C%E5%9B%BE%E5%83%8F%E6%95%B0%E6%8D%AE/</id>
    <published>2020-02-11T15:00:32.000Z</published>
    <updated>2020-02-11T15:25:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要讲解如何通过ROS获取Airsim的雷达数据和相机拍的图像数据，并用rviz将激光雷达的点云数据和相机的图像数据显示。</p><a id="more"></a><h1 id="对Airsim设置激光雷达和相机。"><a href="#对Airsim设置激光雷达和相机。" class="headerlink" title="对Airsim设置激光雷达和相机。"></a>对Airsim设置激光雷达和相机。</h1><p>打开setting.json, 按照如下进行设置。具体看代码的注释。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;ClockSpeed&quot;: 1,</span><br><span class="line">  &quot;SeeDocsAt&quot;: &quot;https:&#x2F;&#x2F;github.com&#x2F;Microsoft&#x2F;AirSim&#x2F;blob&#x2F;master&#x2F;docs&#x2F;settings.md&quot;,</span><br><span class="line">  &quot;SettingsVersion&quot;: 1.2,</span><br><span class="line">  &quot;SimMode&quot;: &quot;Multirotor&quot;, #多轴飞行器</span><br><span class="line">  &quot;Vehicles&quot;: </span><br><span class="line">  </span><br><span class="line">  &#123;</span><br><span class="line">    &quot;Drone_1&quot;: &#123;</span><br><span class="line">      </span><br><span class="line">  &quot;VehicleType&quot;: &quot;SimpleFlight&quot;,</span><br><span class="line">  </span><br><span class="line">  #传感器</span><br><span class="line">      &quot;Sensors&quot;: </span><br><span class="line">  &#123;</span><br><span class="line">    #激光雷达</span><br><span class="line">        &quot;MyLidar1&quot;:</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;SensorType&quot;:6,#6代表激光雷达</span><br><span class="line">          &quot;Enabled&quot;:true,#打开激光雷达</span><br><span class="line">          &quot;NumberOfChannels&quot;:64, #64线激光雷达</span><br><span class="line">          &quot;PointsPerSecond&quot;:200000, #点云的数量</span><br><span class="line">          &quot;DrawDebugPoints&quot;:true,</span><br><span class="line">          &quot;VerticalFOVUpper&quot;: -15,</span><br><span class="line">          &quot;VerticalFOVLower&quot;: 25, </span><br><span class="line">          &quot;HorizontalFOVStart&quot;: -180, </span><br><span class="line">          &quot;HorizontalFOVEnd&quot;: 180, </span><br><span class="line">          &quot;DrawDebugPoints&quot;: true,</span><br><span class="line">          &quot;DataFrame&quot;: &quot;SensorLocalFrame&quot;,</span><br><span class="line">  &quot;Roll&quot;: 0, &quot;Pitch&quot;: 0, &quot;Yaw&quot; : 0,</span><br><span class="line">  &quot;X&quot;:0, &quot;Y&quot;:0, &quot;Z&quot;:-0.5</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">  </span><br><span class="line">  #相机</span><br><span class="line">      &quot;Cameras&quot;: </span><br><span class="line">  &#123;</span><br><span class="line">        &quot;camera_1&quot;: </span><br><span class="line">&#123;</span><br><span class="line">          &quot;CaptureSettings&quot;: </span><br><span class="line">  [</span><br><span class="line">            &#123;</span><br><span class="line">              &quot;ImageType&quot;: 0,</span><br><span class="line">              &quot;Width&quot;: 256,</span><br><span class="line">              &quot;Height&quot;: 144,</span><br><span class="line">              &quot;FOV_Degrees&quot;: 90,</span><br><span class="line">              &quot;TargetGamma&quot;: 1.5</span><br><span class="line">            &#125; </span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;X&quot;: 0.0, &quot;Y&quot;: 0.0, &quot;Z&quot;: 0,</span><br><span class="line">      &quot;Pitch&quot;: 0, &quot;Roll&quot;: 0, &quot;Yaw&quot;: 0</span><br><span class="line">    &#125;  </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> <h1 id="ROS中的点云数据"><a href="#ROS中的点云数据" class="headerlink" title="ROS中的点云数据"></a>ROS中的点云数据</h1><p>ROS中的点云数据主要有三种，分别为pointcloud、pointcloud2、landscan。</p><p>1、pointcloud是ROS最开始的一种点云数据，相对pointcloud2来说已经过时，且实测对点云数据的获取速度较慢，不建议采用；</p><p>2、pointcloud2是ROS现在用的比较多的一种点云数据， 获取速度较快，且支持跟PCL点云数据进行互相转换，比较方便，建议采用；</p><p>3、lanscane是ROS对激光雷达设置的专门的点云数据，但点云数据是根据真是获得的点云处理过后的结果，大致的取点之间的平均点的结果，最终获取的点云数据不太真实。</p><p>首先看pointcloud2数据的获取的例子，ROS具体代码如下,。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;env python </span><br><span class="line">#-*- coding:utf-8 -*-    #注意！！！此两行坚决不能少</span><br><span class="line"></span><br><span class="line">import rospy</span><br><span class="line">import airsim</span><br><span class="line">import numpy as np</span><br><span class="line"></span><br><span class="line">from sensor_msgs.msg import PointCloud2</span><br><span class="line">import std_msgs.msg</span><br><span class="line">import sensor_msgs.point_cloud2 as pcl2</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    </span><br><span class="line">    #初始化节点</span><br><span class="line">    print(&quot;int the node&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;)</span><br><span class="line">    rospy.init_node(&#39;drone1_lidar&#39;,anonymous&#x3D;True)</span><br><span class="line">    </span><br><span class="line">    # 连接仿真器</span><br><span class="line">    client &#x3D; airsim.MultirotorClient()</span><br><span class="line">    client.confirmConnection()</span><br><span class="line">    client.enableApiControl(True)</span><br><span class="line">    client.armDisarm(True)</span><br><span class="line">    print(&quot;connect successfully!&quot;)</span><br><span class="line">    </span><br><span class="line">    pcl_pub &#x3D; rospy.Publisher(&quot;&#x2F;pointcloud&quot;, PointCloud2)</span><br><span class="line">    rospy.loginfo(&quot;Initializing sample pcl2 publisher node...&quot;)</span><br><span class="line">    rospy.sleep(1.)</span><br><span class="line">    </span><br><span class="line">    while not rospy.is_shutdown():</span><br><span class="line">        </span><br><span class="line">        # get the lidar data</span><br><span class="line">        lidarData &#x3D; client.getLidarData()</span><br><span class="line">        </span><br><span class="line">        data &#x3D; lidarData.point_cloud</span><br><span class="line">        points &#x3D; np.array(data, dtype&#x3D;np.dtype(&#39;f4&#39;))</span><br><span class="line">        points &#x3D; np.reshape(points, (int(points.shape[0]&#x2F;3), 3))</span><br><span class="line">        #print (points.shape)</span><br><span class="line">        </span><br><span class="line">        header &#x3D; std_msgs.msg.Header()</span><br><span class="line">        header.stamp &#x3D; rospy.Time.now()</span><br><span class="line">        header.frame_id &#x3D; &#39;lidar&#39;</span><br><span class="line">            </span><br><span class="line">        scaled_polygon_pcl &#x3D; pcl2.create_cloud_xyz32(header, points)</span><br><span class="line">            </span><br><span class="line">        #publish    </span><br><span class="line">        rospy.loginfo(&quot;happily publishing sample pointcloud.. !&quot;)</span><br><span class="line">        pcl_pub.publish(scaled_polygon_pcl)</span><br><span class="line">        print (&quot;publish successfully&quot;)</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">if __name__ &#x3D;&#x3D; &quot;__main__&quot;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure> ]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要讲解如何通过ROS获取Airsim的雷达数据和相机拍的图像数据，并用rviz将激光雷达的点云数据和相机的图像数据显示。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Airsim" scheme="http://yoursite.com/child/categories/Airsim/"/>
    
    
      <category term="ROS" scheme="http://yoursite.com/child/tags/ROS/"/>
    
      <category term="Airsim" scheme="http://yoursite.com/child/tags/Airsim/"/>
    
  </entry>
  
  <entry>
    <title>Setting the airsim</title>
    <link href="http://yoursite.com/child/2020/02/11/Setting-the-airsim/"/>
    <id>http://yoursite.com/child/2020/02/11/Setting-the-airsim/</id>
    <published>2020-02-11T08:28:43.000Z</published>
    <updated>2020-02-11T11:03:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要记录Airsim里面的setting.json文件对airsim仿真的设置。</p><a id="more"></a><h1 id="一、setting-json位置"><a href="#一、setting-json位置" class="headerlink" title="一、setting.json位置"></a>一、setting.json位置</h1><p>Windows: <code>Documents\AirSim</code><br>Linux: <code>~/Documents/AirSim</code></p><h1 id="二、设置的默认值"><a href="#二、设置的默认值" class="headerlink" title="二、设置的默认值"></a>二、设置的默认值</h1><h2 id="1、首次打开setting-json"><a href="#1、首次打开setting-json" class="headerlink" title="1、首次打开setting.json"></a>1、首次打开setting.json</h2><p>第一次打开setting.json文件时，只有下面两句，所有的设置均为默认值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;SettingsVersion&quot;: 1.2,</span><br><span class="line">  &quot;SimMode&quot;: &quot;Car&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、setting-json框架如下"><a href="#2、setting-json框架如下" class="headerlink" title="2、setting.json框架如下"></a>2、setting.json框架如下</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;SettingsVersion&quot;: 1.2,</span><br><span class="line">  &quot;SimMode&quot;: &quot;Car&quot;</span><br><span class="line">  </span><br><span class="line">  #在这里加入下面的设置</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、默认设置"><a href="#3、默认设置" class="headerlink" title="3、默认设置"></a>3、默认设置</h2><p>如果不认为进行设置，则所有的设置均如下为默认值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#全局设置</span><br><span class="line">&#123;</span><br><span class="line">  &quot;SimMode&quot;: &quot;&quot;, # 仿真模式   Car 或 Multirotor 或 ComputerVision</span><br><span class="line">  &quot;ClockType&quot;: &quot;&quot;, #</span><br><span class="line">  &quot;ClockSpeed&quot;: 1, #相对与真实世界时钟的时间速度 5.0则代表时间速度时真实时间的5倍</span><br><span class="line">  &quot;LocalHostIp&quot;: &quot;127.0.0.1&quot;, </span><br><span class="line">  &quot;RecordUIVisible&quot;: true,</span><br><span class="line">  &quot;LogMessagesVisible&quot;: true,</span><br><span class="line">  &quot;ViewMode&quot;: &quot;&quot;,</span><br><span class="line">  &quot;RpcEnabled&quot;: true,</span><br><span class="line">  &quot;EngineSound&quot;: true,</span><br><span class="line">  &quot;PhysicsEngineName&quot;: &quot;&quot;,</span><br><span class="line">  &quot;SpeedUnitFactor&quot;: 1.0,</span><br><span class="line">  &quot;SpeedUnitLabel&quot;: &quot;m&#x2F;s&quot;,</span><br><span class="line">  &quot;Recording&quot;: </span><br><span class="line">  &#123;</span><br><span class="line">    &quot;RecordOnMove&quot;: false,</span><br><span class="line">    &quot;RecordInterval&quot;: 0.05,</span><br><span class="line">    &quot;Cameras&quot;: </span><br><span class="line">&#123; &quot;CameraName&quot;: &quot;0&quot;, &quot;ImageType&quot;: 0, &quot;PixelsAsFloat&quot;: false, &quot;Compress&quot;: true &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line">#相机默认设置</span><br><span class="line">  &quot;CameraDefaults&quot;: </span><br><span class="line">  &#123;</span><br><span class="line">    &quot;CaptureSettings&quot;: </span><br><span class="line"></span><br><span class="line">      &#123;</span><br><span class="line">        &quot;ImageType&quot;: 0,</span><br><span class="line">        &quot;Width&quot;: 256,</span><br><span class="line">        &quot;Height&quot;: 144,</span><br><span class="line">        &quot;FOV_Degrees&quot;: 90,</span><br><span class="line">        &quot;AutoExposureSpeed&quot;: 100,</span><br><span class="line">        &quot;AutoExposureBias&quot;: 0,</span><br><span class="line">        &quot;AutoExposureMaxBrightness&quot;: 0.64,</span><br><span class="line">        &quot;AutoExposureMinBrightness&quot;: 0.03,</span><br><span class="line">        &quot;MotionBlurAmount&quot;: 0,</span><br><span class="line">        &quot;TargetGamma&quot;: 1.0,</span><br><span class="line">        &quot;ProjectionMode&quot;: &quot;&quot;,</span><br><span class="line">        &quot;OrthoWidth&quot;: 5.12</span><br><span class="line">      &#125;</span><br><span class="line">    ,</span><br><span class="line"></span><br><span class="line">#噪声设置</span><br><span class="line">    &quot;NoiseSettings&quot;: </span><br><span class="line">      &#123;</span><br><span class="line">        &quot;Enabled&quot;: false,</span><br><span class="line">        &quot;ImageType&quot;: 0,</span><br><span class="line"></span><br><span class="line">        &quot;RandContrib&quot;: 0.2,</span><br><span class="line">        &quot;RandSpeed&quot;: 100000.0,</span><br><span class="line">        &quot;RandSize&quot;: 500.0,</span><br><span class="line">        &quot;RandDensity&quot;: 2,</span><br><span class="line"></span><br><span class="line">        &quot;HorzWaveContrib&quot;:0.03,</span><br><span class="line">        &quot;HorzWaveStrength&quot;: 0.08,</span><br><span class="line">        &quot;HorzWaveVertSize&quot;: 1.0,</span><br><span class="line">        &quot;HorzWaveScreenSize&quot;: 1.0,</span><br><span class="line"></span><br><span class="line">        &quot;HorzNoiseLinesContrib&quot;: 1.0,</span><br><span class="line">        &quot;HorzNoiseLinesDensityY&quot;: 0.01,</span><br><span class="line">        &quot;HorzNoiseLinesDensityXY&quot;: 0.5,</span><br><span class="line"></span><br><span class="line">        &quot;HorzDistortionContrib&quot;: 1.0,</span><br><span class="line">        &quot;HorzDistortionStrength&quot;: 0.002</span><br><span class="line">      &#125;</span><br><span class="line">    ,</span><br><span class="line"></span><br><span class="line">#相机的pitch, roll or yaw</span><br><span class="line">    &quot;Gimbal&quot;: </span><br><span class="line">&#123;</span><br><span class="line">      &quot;Stabilization&quot;: 0,</span><br><span class="line">      &quot;Pitch&quot;: NaN, &quot;Roll&quot;: NaN, &quot;Yaw&quot;: NaN</span><br><span class="line">    &#125;</span><br><span class="line">    &quot;X&quot;: NaN, &quot;Y&quot;: NaN, &quot;Z&quot;: NaN,</span><br><span class="line">    &quot;Pitch&quot;: NaN, &quot;Roll&quot;: NaN, &quot;Yaw&quot;: NaN</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">#起始经纬度</span><br><span class="line">  &quot;OriginGeopoint&quot;: </span><br><span class="line">  &#123;</span><br><span class="line">    &quot;Latitude&quot;: 47.641468,</span><br><span class="line">    &quot;Longitude&quot;: -122.140165,</span><br><span class="line">    &quot;Altitude&quot;: 122</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">#设置一天当中的哪天</span><br><span class="line">  &quot;TimeOfDay&quot;: </span><br><span class="line">  &#123;</span><br><span class="line">    &quot;Enabled&quot;: false,</span><br><span class="line">    &quot;StartDateTime&quot;: &quot;&quot;,</span><br><span class="line">    &quot;CelestialClockSpeed&quot;: 1,</span><br><span class="line">    &quot;StartDateTimeDst&quot;: false,</span><br><span class="line">    &quot;UpdateIntervalSecs&quot;: 60</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">#子窗口设置</span><br><span class="line">  &quot;SubWindows&quot;: </span><br><span class="line">  [</span><br><span class="line">    &#123;&quot;WindowID&quot;: 0, &quot;CameraName&quot;: &quot;0&quot;, &quot;ImageType&quot;: 3, &quot;Visible&quot;: false&#125;,</span><br><span class="line">    &#123;&quot;WindowID&quot;: 1, &quot;CameraName&quot;: &quot;0&quot;, &quot;ImageType&quot;: 5, &quot;Visible&quot;: false&#125;,</span><br><span class="line">    &#123;&quot;WindowID&quot;: 2, &quot;CameraName&quot;: &quot;0&quot;, &quot;ImageType&quot;: 0, &quot;Visible&quot;: false&#125;</span><br><span class="line">  ],</span><br></pre></td></tr></table></figure>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">&quot;SegmentationSettings&quot;: </span><br><span class="line">&#123;</span><br><span class="line">  &quot;InitMethod&quot;: &quot;&quot;,</span><br><span class="line">  &quot;MeshNamingMethod&quot;: &quot;&quot;,</span><br><span class="line">  &quot;OverrideExisting&quot;: false</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&quot;PawnPaths&quot;: </span><br><span class="line">&#123;</span><br><span class="line">  &quot;BareboneCar&quot;: &#123;&quot;PawnBP&quot;: &quot;Class&#39;&#x2F;AirSim&#x2F;VehicleAdv&#x2F;Vehicle&#x2F;VehicleAdvPawn.VehicleAdvPawn_C&#39;&quot;&#125;,</span><br><span class="line">  &quot;DefaultCar&quot;: &#123;&quot;PawnBP&quot;: &quot;Class&#39;&#x2F;AirSim&#x2F;VehicleAdv&#x2F;SUV&#x2F;SuvCarPawn.SuvCarPawn_C&#39;&quot;&#125;,</span><br><span class="line">  &quot;DefaultQuadrotor&quot;: &#123;&quot;PawnBP&quot;: &quot;Class&#39;&#x2F;AirSim&#x2F;Blueprints&#x2F;BP_FlyingPawn.BP_FlyingPawn_C&#39;&quot;&#125;,</span><br><span class="line">  &quot;DefaultComputerVision&quot;: &#123;&quot;PawnBP&quot;: &quot;Class&#39;&#x2F;AirSim&#x2F;Blueprints&#x2F;BP_ComputerVisionPawn.BP_ComputerVisionPawn_C&#39;&quot;&#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line">#交通工具设置  </span><br><span class="line"> &quot;Vehicles&quot;: </span><br><span class="line">#简单飞行器</span><br><span class="line">&quot;SimpleFlight&quot;: </span><br><span class="line">&#123;</span><br><span class="line">  &quot;VehicleType&quot;: &quot;SimpleFlight&quot;,</span><br><span class="line">  &quot;DefaultVehicleState&quot;: &quot;Armed&quot;,</span><br><span class="line">  &quot;AutoCreate&quot;: true,</span><br><span class="line">  &quot;PawnPath&quot;: &quot;&quot;,</span><br><span class="line">  &quot;EnableCollisionPassthrogh&quot;: false,</span><br><span class="line">  &quot;EnableCollisions&quot;: true,</span><br><span class="line">  &quot;AllowAPIAlways&quot;: true,</span><br><span class="line">  &quot;RC&quot;: </span><br><span class="line">  &#123;</span><br><span class="line">&quot;RemoteControlID&quot;: 0,</span><br><span class="line">&quot;AllowAPIWhenDisconnected&quot;: false</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;Cameras&quot;: </span><br><span class="line">  &#123;</span><br><span class="line">&#x2F;&#x2F;same elements as CameraDefaults above, key as name</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;X&quot;: NaN, &quot;Y&quot;: NaN, &quot;Z&quot;: NaN,</span><br><span class="line">  &quot;Pitch&quot;: NaN, &quot;Roll&quot;: NaN, &quot;Yaw&quot;: NaN</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">#汽车</span><br><span class="line">&quot;PhysXCar&quot;: </span><br><span class="line">&#123;</span><br><span class="line">  &quot;VehicleType&quot;: &quot;PhysXCar&quot;,</span><br><span class="line">  &quot;DefaultVehicleState&quot;: &quot;&quot;,</span><br><span class="line">  &quot;AutoCreate&quot;: true,</span><br><span class="line">  &quot;PawnPath&quot;: &quot;&quot;,</span><br><span class="line">  &quot;EnableCollisionPassthrogh&quot;: false,</span><br><span class="line">  &quot;EnableCollisions&quot;: true,</span><br><span class="line">  &quot;RC&quot;: </span><br><span class="line">  &#123;</span><br><span class="line">&quot;RemoteControlID&quot;: -1</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;Cameras&quot;: </span><br><span class="line">  &#123;</span><br><span class="line">&quot;MyCamera1&quot;: </span><br><span class="line">&#123;</span><br><span class="line">  &#x2F;&#x2F;same elements as elements inside CameraDefaults above</span><br><span class="line">&#125;,</span><br><span class="line">&quot;MyCamera2&quot;: </span><br><span class="line">&#123;</span><br><span class="line">  &#x2F;&#x2F;same elements as elements inside CameraDefaults above</span><br><span class="line">&#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;X&quot;: NaN, &quot;Y&quot;: NaN, &quot;Z&quot;: NaN,</span><br><span class="line">  &quot;Pitch&quot;: NaN, &quot;Roll&quot;: NaN, &quot;Yaw&quot;: NaN</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要记录Airsim里面的setting.json文件对airsim仿真的设置。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Airsim" scheme="http://yoursite.com/child/categories/Airsim/"/>
    
    
      <category term="Airsim" scheme="http://yoursite.com/child/tags/Airsim/"/>
    
  </entry>
  
  <entry>
    <title>windows系统安装ROS</title>
    <link href="http://yoursite.com/child/2020/02/10/windows%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85ROS/"/>
    <id>http://yoursite.com/child/2020/02/10/windows%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85ROS/</id>
    <published>2020-02-10T06:18:55.000Z</published>
    <updated>2020-02-11T11:04:08.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文主要讲解安装Windows版本的ROS。</p><a id="more"></a><h1 id="1、前提"><a href="#1、前提" class="headerlink" title="1、前提"></a>1、前提</h1><p>已经在默认路径安装好visual studio2017；</p><h1 id="2、ROS安装"><a href="#2、ROS安装" class="headerlink" title="2、ROS安装"></a>2、ROS安装</h1><h2 id="创建快捷方式并配置"><a href="#创建快捷方式并配置" class="headerlink" title="创建快捷方式并配置"></a>创建快捷方式并配置</h2><p>桌面空白处右键 “新建快捷方式”<br><img src="/images/2.1.png" alt><br>在输入框中输入以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\System32\cmd.exe &#x2F;k &quot;C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\Tools\VsDevCmd.bat&quot; -arch&#x3D;amd64 -host_arch&#x3D;amd64</span><br></pre></td></tr></table></figure><p>/k前面的表示快捷方式指向的内容， 后面的表示打开快捷方式后执行的内容。<br>将快捷方式设为ROS<br><img src="/images/2.2.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;本文主要讲解安装Windows版本的ROS。&lt;/p&gt;
    
    </summary>
    
    
      <category term="ROS" scheme="http://yoursite.com/child/categories/ROS/"/>
    
    
      <category term="ROS" scheme="http://yoursite.com/child/tags/ROS/"/>
    
  </entry>
  
  <entry>
    <title>windows上使用ROS系统</title>
    <link href="http://yoursite.com/child/2020/02/09/ROS-on-Windows/"/>
    <id>http://yoursite.com/child/2020/02/09/ROS-on-Windows/</id>
    <published>2020-02-09T02:45:32.000Z</published>
    <updated>2020-02-11T11:05:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要讲解在windows上安装ubuntu子系统，并对子系统GUI界面及ROS系统以及windows版本的ROS安装。</p><a id="more"></a><h1 id="下载安装wsl并换源"><a href="#下载安装wsl并换源" class="headerlink" title="下载安装wsl并换源"></a>下载安装wsl并换源</h1><h2 id="安装wsl"><a href="#安装wsl" class="headerlink" title="安装wsl"></a>安装wsl</h2><p>打开Microsoft Store并搜索ubuntu，点击相应版本下载即可。</p><h2 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h2><p>查看默认的源地址为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim &#x2F;etc&#x2F;apt&#x2F;sources.list</span><br></pre></td></tr></table></figure> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># See http:&#x2F;&#x2F;help.ubuntu.com&#x2F;community&#x2F;UpgradeNotes for how to upgrade to</span><br><span class="line"># newer versions of the distribution.</span><br><span class="line">deb http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; bionic main restricted</span><br><span class="line"># deb-src http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; bionic main restricted</span><br><span class="line"></span><br><span class="line">## Major bug fix updates produced after the final release of the</span><br><span class="line">## distribution.</span><br><span class="line">deb http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; bionic-updates main restricted</span><br><span class="line"># deb-src http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; bionic-updates main restricted</span><br><span class="line"></span><br><span class="line">## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu</span><br><span class="line">## team. Also, please note that software in universe WILL NOT receive any</span><br><span class="line">## review or updates from the Ubuntu security team.</span><br><span class="line">deb http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; bionic universe</span><br><span class="line"># deb-src http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; bionic universe</span><br><span class="line">deb http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; bionic-updates universe</span><br><span class="line"># deb-src http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; bionic-updates universe</span><br><span class="line">...</span><br></pre></td></tr></table></figure> <p>修改默认源</p><p>1、首先将默认源备份:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp &#x2F;etc&#x2F;apt&#x2F;sources.list &#x2F;etc&#x2F;apt&#x2F;sources.list.2020.2.9</span><br></pre></td></tr></table></figure><p>2、Vim打开源的文件:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim &#x2F;etc&#x2F;apt&#x2F;sources.list</span><br></pre></td></tr></table></figure> <p>按 i 键进入编辑模式， esc进入命令模式， ：wq命令保存并退出，子系统的终端右键即可粘贴。</p><p>3、输入命令将默认源替换为阿里云的源：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:%s&#x2F;security.ubuntu&#x2F;mirrors.aliyun&#x2F;g</span><br><span class="line">:%s&#x2F;archive.ubuntu&#x2F;mirrors.aliyun&#x2F;g</span><br></pre></td></tr></table></figure><p>4、更新</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><h2 id="安装子系统桌面"><a href="#安装子系统桌面" class="headerlink" title="安装子系统桌面"></a>安装子系统桌面</h2><p>1、安装<a href="https://sourceforge.net/projects/vcxsrv/" target="_blank" rel="noopener" title="点击下载VcXsrc">VcXsrv</a><br>安装完成后有两个程序，分别为XLaunch和VcXsrv，可用它们远程访问Linux桌面。</p><p>2、wsl安装桌面环境<br>在Ubuntu终端输入命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ubuntu-desktop</span><br><span class="line">sudo apt-get install unity</span><br><span class="line">sudo apt-get install compizconfig-settings-manager</span><br></pre></td></tr></table></figure><p>这一步安装起来稍微有点慢。</p><p>4、启动XLaunch<br><img src="/images/1.png" alt="启动XLaunch的界面"><br>选择One large window， 并将下面的Display number改为0，中间全部默认，<br>最后一步选择Save configuration,将快捷方式保存到桌面，如下图。<br><img src="/images/2.png" alt="保存快捷方式"></p><p>5、配置显示端口<br>桌面环境安装完成后，打开上一步保存的快捷方式，并在Ubuntu终端输入命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export  DISPLAY&#x3D;localhost:0</span><br><span class="line">ccsm</span><br></pre></td></tr></table></figure><p>此时在X-windows中，即会弹出ccsm的配置界面，并按照如下图进行配置，完成后点击close。<br><img src="/images/3.png" alt="配置1"><br><img src="/images/4.png" alt="配置2"></p><p>6、开启桌面<br>首先打开第4步保存的快捷方式，然后在Ubuntu终端输入命令即可打开桌面：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export  DISPLAY&#x3D;localhost:0</span><br><span class="line">suod compiz</span><br></pre></td></tr></table></figure><h2 id="Ubuntu安装Ros系统"><a href="#Ubuntu安装Ros系统" class="headerlink" title="Ubuntu安装Ros系统"></a>Ubuntu安装Ros系统</h2><p>首先如果下文教程安装出现失败，可参考<a href="http://wiki.ros.org/melodic/Installation/Ubuntu" target="_blank" rel="noopener" title="ROS官网安装教程">官网</a></p><p>打开Ubuntu终端</p><p>1、添加ROS镜像源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sh -c &#39;. &#x2F;etc&#x2F;lsb-release &amp;&amp; echo &quot;deb http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ros&#x2F;ubuntu&#x2F; &#96;lsb_release -cs&#96; main&quot; &gt; &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;ros-latest.list&#39;</span><br></pre></td></tr></table></figure><p>2、添加密钥</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-key adv --keyserver &#39;hkp:&#x2F;&#x2F;keyserver.ubuntu.com:80&#39; --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654</span><br></pre></td></tr></table></figure><p>3、安装ROS</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install ros-melodic-desktop-full</span><br></pre></td></tr></table></figure><p>中间失败的话，继续输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install ros-melodic-desktop-full</span><br></pre></td></tr></table></figure><p>4、初始化rosdep</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rosdep init</span><br><span class="line">rosdep update</span><br></pre></td></tr></table></figure><p>5、设置环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;source &#x2F;opt&#x2F;ros&#x2F;melodic&#x2F;setup.bash&quot; &gt;&gt; ~&#x2F;.bashrc</span><br><span class="line">source ~&#x2F;.bashrc</span><br></pre></td></tr></table></figure><p>6、安装rosinstall</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install python-rosinstall python-rosinstall-generator python-wstool build-essential</span><br></pre></td></tr></table></figure><h2 id="测试ROS"><a href="#测试ROS" class="headerlink" title="测试ROS"></a>测试ROS</h2><p>1、打开一个Ubuntu终端输入roscore打开ROS，出现下图情况即成功打开。<br><img src="/images/5.png" alt></p><p>2、按照上文所示的教程打开wsl的桌面，并在桌面打开终端输入以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roslaunch turtle_tf turtle_tf_demo.launch</span><br></pre></td></tr></table></figure><p>出现海龟的画面，说明ROS已经安装成功<br><img src="/images/6.png" alt><br>按下上下左右键即可控制海龟的运动。</p><p>开始你的Windows及Ubuntu混合开发及ROS开发。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要讲解在windows上安装ubuntu子系统，并对子系统GUI界面及ROS系统以及windows版本的ROS安装。&lt;/p&gt;
    
    </summary>
    
    
      <category term="ROS" scheme="http://yoursite.com/child/categories/ROS/"/>
    
    
      <category term="ROS" scheme="http://yoursite.com/child/tags/ROS/"/>
    
  </entry>
  
</feed>
